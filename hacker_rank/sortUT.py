import unittest
import sortDynamic

class Test(unittest.TestCase):


    def setUp(self):
        pass


    def tearDown(self):
        pass


    def testStock(self):
        self.assertEqual(True, sortDynamic.sortable([0,1,2]))
        self.assertEqual(True, sortDynamic.sortable([0,2,1]))
        self.assertEqual(True, sortDynamic.sortable([1,0,2]))
        self.assertEqual(False, sortDynamic.sortable([1,2,0]))
        self.assertEqual(False, sortDynamic.sortable([2,0,1]))
        self.assertEqual(False, sortDynamic.sortable([2,1,0]))
        
        self.assertEqual(True, sortDynamic.sortable([0,1,2,3]))
        self.assertEqual(True, sortDynamic.sortable([0,1,3,2]))
        self.assertEqual(True, sortDynamic.sortable([0,2,1,3]))
        self.assertEqual(False, sortDynamic.sortable([0,2,3,1]))
        self.assertEqual(False, sortDynamic.sortable([0,3,1,2]))
        self.assertEqual(False, sortDynamic.sortable([0,3,2,1]))
        self.assertEqual(True, sortDynamic.sortable([1,0,2,3]))
        self.assertEqual(True, sortDynamic.sortable([1,0,3,2]))
        self.assertEqual(False, sortDynamic.sortable([1,2,0,3]))
        self.assertEqual(False, sortDynamic.sortable([1,2,3,0]))
        self.assertEqual(False, sortDynamic.sortable([1,3,0,2]))
        self.assertEqual(False, sortDynamic.sortable([1,3,2,0]))
        self.assertEqual(False, sortDynamic.sortable([2,0,1,3]))
        self.assertEqual(False, sortDynamic.sortable([2,0,3,1]))
        self.assertEqual(False, sortDynamic.sortable([2,1,0,3]))
        self.assertEqual(False, sortDynamic.sortable([2,1,3,0]))
        self.assertEqual(False, sortDynamic.sortable([2,3,0,1]))
        self.assertEqual(False, sortDynamic.sortable([2,3,1,0]))
        self.assertEqual(False, sortDynamic.sortable([3,0,1,2]))
        self.assertEqual(False, sortDynamic.sortable([3,0,2,1]))
        self.assertEqual(False, sortDynamic.sortable([3,1,0,2]))
        self.assertEqual(False, sortDynamic.sortable([3,1,2,0]))
        self.assertEqual(False, sortDynamic.sortable([3,2,0,1]))
        self.assertEqual(False, sortDynamic.sortable([3,2,1,0]))

        self.assertEqual(True, sortDynamic.sortable([0,1,2,3,4]))
        self.assertEqual(True, sortDynamic.sortable([0,1,2,4,3]))
        self.assertEqual(True, sortDynamic.sortable([0,1,3,2,4]))
        self.assertEqual(False, sortDynamic.sortable([0,1,3,4,2]))
        self.assertEqual(False, sortDynamic.sortable([0,1,4,2,3]))
        self.assertEqual(False, sortDynamic.sortable([0,1,4,3,2]))
        self.assertEqual(True, sortDynamic.sortable([0,2,1,3,4]))
        self.assertEqual(True, sortDynamic.sortable([0,2,1,4,3]))
        self.assertEqual(False, sortDynamic.sortable([0,2,3,1,4]))
        self.assertEqual(False, sortDynamic.sortable([0,2,3,4,1]))
        self.assertEqual(False, sortDynamic.sortable([0,2,4,1,3]))
        self.assertEqual(False, sortDynamic.sortable([0,2,4,3,1]))
        self.assertEqual(False, sortDynamic.sortable([0,3,1,2,4]))
        self.assertEqual(False, sortDynamic.sortable([0,3,1,4,2]))
        self.assertEqual(False, sortDynamic.sortable([0,3,2,1,4]))
        self.assertEqual(False, sortDynamic.sortable([0,3,2,4,1]))
        self.assertEqual(False, sortDynamic.sortable([0,3,4,1,2]))
        self.assertEqual(False, sortDynamic.sortable([0,3,4,2,1]))
        self.assertEqual(False, sortDynamic.sortable([0,4,1,2,3]))
        self.assertEqual(False, sortDynamic.sortable([0,4,1,3,2]))
        self.assertEqual(False, sortDynamic.sortable([0,4,2,1,3]))
        self.assertEqual(False, sortDynamic.sortable([0,4,2,3,1]))
        self.assertEqual(False, sortDynamic.sortable([0,4,3,1,2]))
        self.assertEqual(False, sortDynamic.sortable([0,4,3,2,1]))
        self.assertEqual(True, sortDynamic.sortable([1,0,2,3,4]))
        self.assertEqual(True, sortDynamic.sortable([1,0,2,4,3]))
        self.assertEqual(True, sortDynamic.sortable([1,0,3,2,4]))
        self.assertEqual(False, sortDynamic.sortable([1,0,3,4,2]))
        self.assertEqual(False, sortDynamic.sortable([1,0,4,2,3]))
        self.assertEqual(False, sortDynamic.sortable([1,0,4,3,2]))
        self.assertEqual(False, sortDynamic.sortable([1,2,0,3,4]))
        self.assertEqual(False, sortDynamic.sortable([1,2,0,4,3]))
        self.assertEqual(False, sortDynamic.sortable([1,2,3,0,4]))
        self.assertEqual(False, sortDynamic.sortable([1,2,3,4,0]))
        self.assertEqual(False, sortDynamic.sortable([1,2,4,0,3]))
        self.assertEqual(False, sortDynamic.sortable([1,2,4,3,0]))
        self.assertEqual(False, sortDynamic.sortable([1,3,0,2,4]))
        self.assertEqual(False, sortDynamic.sortable([1,3,0,4,2]))
        self.assertEqual(False, sortDynamic.sortable([1,3,2,0,4]))
        self.assertEqual(False, sortDynamic.sortable([1,3,2,4,0]))
        self.assertEqual(False, sortDynamic.sortable([1,3,4,0,2]))
        self.assertEqual(False, sortDynamic.sortable([1,3,4,2,0]))
        self.assertEqual(False, sortDynamic.sortable([1,4,0,2,3]))
        self.assertEqual(False, sortDynamic.sortable([1,4,0,3,2]))
        self.assertEqual(False, sortDynamic.sortable([1,4,2,0,3]))
        self.assertEqual(False, sortDynamic.sortable([1,4,2,3,0]))
        self.assertEqual(False, sortDynamic.sortable([1,4,3,0,2]))
        self.assertEqual(False, sortDynamic.sortable([1,4,3,2,0]))
        self.assertEqual(False, sortDynamic.sortable([2,0,1,3,4]))
        self.assertEqual(False, sortDynamic.sortable([2,0,1,4,3]))
        self.assertEqual(False, sortDynamic.sortable([2,0,3,1,4]))
        self.assertEqual(False, sortDynamic.sortable([2,0,3,4,1]))
        self.assertEqual(False, sortDynamic.sortable([2,0,4,1,3]))
        self.assertEqual(False, sortDynamic.sortable([2,0,4,3,1]))
        self.assertEqual(False, sortDynamic.sortable([2,1,0,3,4]))
        self.assertEqual(False, sortDynamic.sortable([2,1,0,4,3]))
        self.assertEqual(False, sortDynamic.sortable([2,1,3,0,4]))
        self.assertEqual(False, sortDynamic.sortable([2,1,3,0,4]))
        self.assertEqual(False, sortDynamic.sortable([2,1,4,0,3]))
        self.assertEqual(False, sortDynamic.sortable([2,1,4,3,0]))
        self.assertEqual(False, sortDynamic.sortable([2,3,0,1,4]))
        self.assertEqual(False, sortDynamic.sortable([2,3,0,4,1]))
        self.assertEqual(False, sortDynamic.sortable([2,3,1,0,4]))
        self.assertEqual(False, sortDynamic.sortable([2,3,1,4,0]))
        self.assertEqual(False, sortDynamic.sortable([2,3,4,0,1]))
        self.assertEqual(False, sortDynamic.sortable([2,3,4,1,0]))
        self.assertEqual(False, sortDynamic.sortable([2,4,0,1,3]))
        self.assertEqual(False, sortDynamic.sortable([2,4,0,3,1]))
        self.assertEqual(False, sortDynamic.sortable([2,4,1,0,3]))
        self.assertEqual(False, sortDynamic.sortable([2,4,1,3,0]))
        self.assertEqual(False, sortDynamic.sortable([2,4,3,0,1]))
        self.assertEqual(False, sortDynamic.sortable([2,4,3,1,0]))
        self.assertEqual(False, sortDynamic.sortable([3,0,1,2,4]))
        self.assertEqual(False, sortDynamic.sortable([3,0,1,4,2]))
        self.assertEqual(False, sortDynamic.sortable([3,0,2,1,4]))
        self.assertEqual(False, sortDynamic.sortable([3,0,2,4,1]))
        self.assertEqual(False, sortDynamic.sortable([3,0,4,1,2]))
        self.assertEqual(False, sortDynamic.sortable([3,0,4,2,1]))
        self.assertEqual(False, sortDynamic.sortable([3,1,0,2,4]))
        self.assertEqual(False, sortDynamic.sortable([3,1,0,4,2]))
        self.assertEqual(False, sortDynamic.sortable([3,1,2,0,4]))
        self.assertEqual(False, sortDynamic.sortable([3,1,2,4,0]))
        self.assertEqual(False, sortDynamic.sortable([3,1,4,0,2]))
        self.assertEqual(False, sortDynamic.sortable([3,1,4,2,0]))
        self.assertEqual(False, sortDynamic.sortable([3,2,0,1,4]))
        self.assertEqual(False, sortDynamic.sortable([3,2,0,4,1]))
        self.assertEqual(False, sortDynamic.sortable([3,2,1,0,4]))
        self.assertEqual(False, sortDynamic.sortable([3,2,1,4,0]))
        self.assertEqual(False, sortDynamic.sortable([3,2,4,0,1]))
        self.assertEqual(False, sortDynamic.sortable([3,2,4,1,0]))
        self.assertEqual(False, sortDynamic.sortable([3,4,0,1,2]))
        self.assertEqual(False, sortDynamic.sortable([3,4,0,2,1]))
        self.assertEqual(False, sortDynamic.sortable([3,4,1,0,2]))
        self.assertEqual(False, sortDynamic.sortable([3,4,1,2,0]))
        self.assertEqual(False, sortDynamic.sortable([3,4,2,0,1]))
        self.assertEqual(False, sortDynamic.sortable([3,4,2,1,0]))
        self.assertEqual(False, sortDynamic.sortable([4,0,1,2,3]))
        self.assertEqual(False, sortDynamic.sortable([4,0,1,3,2]))
        self.assertEqual(False, sortDynamic.sortable([4,0,2,1,3]))
        self.assertEqual(False, sortDynamic.sortable([4,0,2,3,1]))
        self.assertEqual(False, sortDynamic.sortable([4,0,3,1,2]))
        self.assertEqual(False, sortDynamic.sortable([4,0,3,2,1]))
        self.assertEqual(False, sortDynamic.sortable([4,1,0,2,3]))
        self.assertEqual(False, sortDynamic.sortable([4,1,0,3,2]))
        self.assertEqual(False, sortDynamic.sortable([4,1,2,0,3]))
        self.assertEqual(False, sortDynamic.sortable([4,1,2,3,0]))
        self.assertEqual(False, sortDynamic.sortable([4,1,3,0,2]))
        self.assertEqual(False, sortDynamic.sortable([4,1,3,2,0]))
        self.assertEqual(False, sortDynamic.sortable([4,2,0,1,3]))
        self.assertEqual(False, sortDynamic.sortable([4,2,0,3,1]))
        self.assertEqual(False, sortDynamic.sortable([4,2,1,0,3]))
        self.assertEqual(False, sortDynamic.sortable([4,2,1,3,0]))
        self.assertEqual(False, sortDynamic.sortable([4,2,3,0,1]))
        self.assertEqual(False, sortDynamic.sortable([4,2,3,1,0]))
        self.assertEqual(False, sortDynamic.sortable([4,3,0,1,2]))
        self.assertEqual(False, sortDynamic.sortable([4,3,0,2,1]))
        self.assertEqual(False, sortDynamic.sortable([4,3,1,0,2]))
        self.assertEqual(False, sortDynamic.sortable([4,3,1,2,0]))
        self.assertEqual(False, sortDynamic.sortable([4,3,2,0,1]))
        self.assertEqual(False, sortDynamic.sortable([4,3,2,1,0]))

if __name__ == "__main__":
    unittest.main()